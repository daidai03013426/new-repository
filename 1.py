
n=[0.14632971213167,-0.84548187169114,-3.7563603672040,3.3855169168385,-0.95791963387872,0.15772038513228,-0.016616417199501,0.00081214629983568,0.00028319080123804,-0.00060706301565874,-0.018990068218419,-0.032529748770505,-0.021841717175414,-0.000052838357969930,-0.00047184321073267,-0.00030001780793026,0.000047661393906987,-0.0000044141845330846,-0.00000000000000072694996297594,-0.000031679644845054,-0.0000028270797985312,-0.00000000085205128120103,-0.0000022425281908000,-0.00000065171222895601,-0.00000000000014341729937924,-0.00000040516996860117,-0.0000000012734301741641,-0.00000000017424871230634,-0.00000000000000000068762131295531,0.000000000000000000014478307828521,0.000000000000000000000026335781662795,-0.000000000000000000000011947622640071,0.0000000000000000000000018228094581404,-0.000000000000000000000000093537087292458]
I=[0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,3,3,3,4,4,4,5,8,8,21,23,29,30,31,32]
J=[-2,-1,0,1,2,3,4,5,-9,-7,-1,0,1,3,-3,0,1,3,17,-4,0,6,-5,-2,10,-8,-11,-6,-29,-31,-38,-39,-40,-41]
na=[7.70889828326934,-26.0835009128688,267.416218930389,17.2221089496844,-293.542332145970,614.135601882478,-61056.2757725674,-65127225.1118219,73591.9313521937,-11664650591.4191,35.5267086434461,-596.144543825955,-475.842430145708,69.6781965359503,335.674250377312,25052.6809130882,146997.380630766,53806931509153400000,1436198272913460000000,36498586616599400000,-2547.41561156775,2401201970965630000000000000,-393847464679496000000000000000,1470734070248520000000000,-42639125043205900000000000000000,194509340621077000000000000000000000000,666212132114896000000000,7067770165528580000000000000000000,175563621975576000000000000000000000000000,10840860742912400000000000000,73087270517515100000000000000000000000000000,1591458473988700000000000,37712160594332400000000000000000000000000]
Ia=[0,0,0,1,1,1,1,1,2,2,3,3,3,4,4,4,4,5,6,7,8,10,10,14,18,20,22,22,24,28,28,32,32]
Ja=[0,1,5,0,3,4,8,14,6,16,0,2,3,0,1,4,5,28,28,24,1,32,36,22,28,36,16,28,36,16,36,10,28]
nb=[0.000000000000125244360717979,-0.0126599322553713,5.06878030140626,31.7847171154202,-391041.161399932,-0.0000000000975733406392044,-18.6312419488279,510.973543414101,373847.005822362,0.0000000299804024666572,20.0544393820342,-0.00000498030487662829,-10.2301806360030,55.2819126990325,-206.211367510878,-7940.12232324823,7.82248472028153,-58.6544326902468,3550.73647696481,-0.000115303107290162,-1.75092403171802,257.981687748160,-727.048374179467,0.000121644822609198,0.0393137871762692,0.00704181005909296,-82.9108200698110,-0.265178818131250,13.7531682453991,-52.2394090753046,2405.56298941048,-22736.1631268929,89074.6343932567,-23923456.5822486,5687958081.29714]
Ib=[-12,-12,-12,-12,-12,-10,-10,-10,-10,-8,-8,-6,-6,-6,-6,-5,-4,-4,-4,-3,-3,-3,-3,-2,-2,-1,0,2,2,5,6,8,10,14,14]
Jb=[2,10,12,14,20,2,10,14,18,2,8,2,6,7,8,10,4,5,8,1,3,5,6,0,1,0,3,0,1,0,1,1,1,3,7]
p1=16.53
T1=1386
R=0.461526

def acceleration_of_gravity(p,T):#r
    sum=0   
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum+=n[i-1]*(7.1-pi)**I[i-1]*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    r=sum
    return r


def specific_volume(p,T):#rp
    sum=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    v=sum*pi*R*T/(p*10**3)
    return v

def internal_energy(p,T):#ru
    sum1=0
    sum2=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):                                                                                                                                                                                                                                                                                                                                                                                                                                                  
        sum1+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(tao-1.222)**(J[i-1]-1)
        sum2-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    u=(sum1*tao-sum2*pi)*R*T    
    return u

def entropy(p,T):

    sum1=0
    sum2=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum1+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(tao-1.222)**(J[i-1]-1)
        sum2+=n[i-1]*(7.1-pi)**I[i-1]*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    s=(sum1*tao-sum2)*R
    return s

def enthalpy(p,T):
    sum=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(tao-1.222)**(J[i-1]-1)
        #result='%.3f'%sum
    h=sum*tao*R*T
    return h

def constant_pressure_specific_heat(p,T):#tao**2*rtt
    sum=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(J[i-1]-1)*(tao-1.222)**(J[i-1]-2)
        #result='%.3f'%sum
    cp=-tao**2*sum*R
    return cp

def constant_specific_volume_specific_heat(p,T):
    sum1=0
    sum2=0
    sum3=0
    sum4=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum1+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(J[i-1]-1)*(tao-1.222)**(J[i-1]-2)
        sum2-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*(tao-1.222)**J[i-1]
        sum3-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*J[i-1]*(tao-1.222)**(J[i-1]-1)
        sum4+=n[i-1]*I[i-1]*(I[i-1]-1)*(7.1-pi)**(I[i-1]-2)*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    cv=(-tao**2*sum1+((sum2-tao*sum3)**2)*sum4**(-1))*R
    return cv

def speed_of_sound(p,T):
    sum1=0
    sum2=0
    sum3=0
    sum4=0
    pi=p/p1
    tao=T1/T
    for i in range(1,35):
        sum1-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*(tao-1.222)**J[i-1]
        sum2-=n[i-1]*I[i-1]*(7.1-pi)**(I[i-1]-1)*J[i-1]*(tao-1.222)**(J[i-1]-1)
        sum3+=n[i-1]*(7.1-pi)**I[i-1]*J[i-1]*(J[i-1]-1)*(tao-1.222)**(J[i-1]-2)
        sum4+=n[i-1]*I[i-1]*(I[i-1]-1)*(7.1-pi)**(I[i-1]-2)*(tao-1.222)**J[i-1]
        #result='%.3f'%sum
    w=((sum1**2*R*T*1000)/((sum1-tao*sum2)**2/(tao**2*sum3)-sum4))**0.5
    return w

def supplementary_formula_a(h,s):
    h1=2300
    s1=4.4
    sum=0
    nai=h/h1
    gama=s/s1
    for i in range(1,34):
        sum+=na[i-1]*(nai-1.01)**Ia[i-1]*(gama-0.750)**Ja[i-1]
    result=sum*99
    return result

def supplementary_formula_b(h,s):
    h1=2800
    s1=5.3
    sum=0
    nai=h/h1
    gama=s/s1
    for i in range(1,36):
        sum+=nb[i-1]*(nai-0.681)**Ib[i-1]*(gama-0.792)**Jb[i-1]
    result=16.6/sum
    return result

    